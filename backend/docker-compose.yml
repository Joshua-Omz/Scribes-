version: '3.8'

services:
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: scribes_user
      POSTGRES_PASSWORD: scribes_password
      POSTGRES_DB: scribes_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scribes_user -d scribes_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+psycopg://scribes_user:scribes_password@db/scribes_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - DEBUG=true
      - SECRET_KEY=dev_secret_key
      - JWT_SECRET_KEY=dev_jwt_secret_key
      - JWT_REFRESH_SECRET_KEY=dev_jwt_refresh_secret_key
      - CORS_ORIGINS=*
    volumes:
      - ./:/app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+psycopg://scribes_user:scribes_password@db/scribes_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - DEBUG=true
    volumes:
      - ./:/app
    command: ["celery", "-A", "app.workers.worker", "worker", "--loglevel=info"]

volumes:
  postgres_data:
  redis_data:
